name: Test build

on:
  workflow_dispatch:
  pull_request:
    branches: [ develop, main ]

jobs:
  build-assets:
    name: Build NPM assets (${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          # Use package.json for key, if package-lock.json is not committed.
          # key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM build
        run: |
          npm install
          npm run prod

  laravel-ci:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install npm dependencies and package
      run: npm install && npm run development

    - name: Install composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate application key
      run: php artisan key:generate

    - name: Set directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create sqlite database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
